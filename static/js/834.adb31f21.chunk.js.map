{"version":3,"file":"static/js/834.adb31f21.chunk.js","mappings":"qRAGaA,EAAiB,mCAAG,WAAOC,GAAP,yFACRC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAb,iBAAyBF,EAAzB,4BAA+CG,EAAAA,IADvC,cACzBC,EADyB,OAEvBC,EAAYD,EAASE,KAArBD,QAFuB,kBAIxBA,GAJwB,2CAAH,sD,mBCDjBE,EAAOC,EAAAA,GAAAA,GAAH,uFAMJC,EAAaD,EAAAA,GAAAA,GAAH,oE,SCkCvB,EApCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAOhB,GAAP,uFAEjBiB,EAAAA,QAAAA,SAFiB,SAGYlB,EAAkBC,GAH9B,OAGXkB,EAHW,OAIjBJ,EAAWI,GAJM,gDAMjBC,QAAQC,IAAR,MANiB,yBAQjBH,EAAAA,QAAAA,SARiB,4EAAH,sDAWlBD,EAAaN,EACd,GAAE,CAACA,KAGF,8BACGG,EAAQQ,OAAS,GAChB,SAACd,EAAD,UACGM,EAAQS,KAAI,SAAAC,GAAI,OACnB,2BACE,UAACd,EAAD,sBAAqBc,EAAKC,WAC1B,uBAAID,EAAKE,YAFFF,EAAKvB,GADK,OAQnB,0BAAK,oFAGZ,C,8ECxCM,IAAMG,EAAU,mCACVD,EAAM,+B","sources":["services/fetchMovieReviews.js","components/Reviews/Reviews.styled.js","components/Reviews/Review.js","services/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_KEY, URL } from \"./constants\";\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(`${URL}movie/${id}/reviews?api_key=${API_KEY}`);\n  const { results } = response.data;\n  \n  return results;\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n`;\n\nexport const AuthorName = styled.h3`\n  margin-bottom: 8px;\n  font-weight: 600;\n`;","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"services/fetchMovieReviews\";\nimport { AuthorName, List } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async (id) => {\n      try {\n        Loading.circle();\n        const fetchedReviews = await fetchMovieReviews(id);\n        setReviews(fetchedReviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        Loading.remove();\n      }\n    }\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(item => (\n        <li key={item.id}>\n          <AuthorName>Author: {item.author}</AuthorName>\n          <p>{item.content}</p>\n        </li>\n      ))}\n        </List>\n      )\n      : <div><p>We don't have any reviews for this movie ðŸ¥º</p></div>}\n    </>\n  )\n}\n\nexport default Reviews;","export const API_KEY = \"959330b1b48c95e1fde96a992bbede29\";\nexport const URL = \"https://api.themoviedb.org/3/\";"],"names":["fetchMovieReviews","id","axios","URL","API_KEY","response","results","data","List","styled","AuthorName","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","Loading","fetchedReviews","console","log","length","map","item","author","content"],"sourceRoot":""}