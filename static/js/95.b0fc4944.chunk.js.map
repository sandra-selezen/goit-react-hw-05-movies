{"version":3,"file":"static/js/95.b0fc4944.chunk.js","mappings":"oSAGaA,EAAiB,mCAAG,WAAOC,GAAP,uGACRC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAb,iBAAyBF,EAAzB,oBAAuCG,EAAAA,IAD/B,cACzBC,EADyB,SAGgCA,EAASC,KAAhEC,EAHuB,EAGvBA,MAAOC,EAHgB,EAGhBA,SAAUC,EAHM,EAGNA,YAAaC,EAHP,EAGOA,OAAQC,EAHf,EAGeA,aACxCC,EAAcF,EAAOG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MACjDC,EAAY,CAChBV,MAAAA,EACAC,SAAAA,EACAC,YAAAA,EACAG,YAAAA,EACAD,cAA8B,GAAfA,GAAmBO,WAVL,kBAaxBD,GAbwB,2CAAH,sD,6BCAjBE,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8WAeTE,EAAUF,EAAAA,GAAAA,IAAH,2PAgBPG,EAAcH,EAAAA,GAAAA,GAAH,iOAaXI,EAAcJ,EAAAA,GAAAA,GAAH,mGAMXK,EAAaL,EAAAA,GAAAA,IAAH,mQAgBVM,EAAaN,EAAAA,GAAAA,GAAH,yLAUVO,EAAgBP,EAAAA,GAAAA,GAAH,yFAMbQ,EAAYR,EAAAA,GAAAA,EAAH,gDAITS,EAAWT,EAAAA,GAAAA,GAAH,wDAKRU,GAAWV,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6S,mBChCrB,EAvDqB,WAAO,IAAD,IACjBW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEnDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAO1C,GAAP,uFAEjB2C,EAAAA,QAAAA,SAFiB,SAGiB5C,EAAkBC,GAHnC,OAGX4C,EAHW,OAIjBV,EAAgBU,GAJC,gDAMjBC,QAAQC,IAAR,MANiB,yBAQjBH,EAAAA,QAAAA,SARiB,4EAAH,sDAWlBD,EAAaZ,EACd,GAAE,CAACA,IAEJ,IAAQxB,EAA4D2B,EAA5D3B,MAAOC,EAAqD0B,EAArD1B,SAAUC,EAA2CyB,EAA3CzB,YAAaG,EAA8BsB,EAA9BtB,YAAaD,EAAiBuB,EAAjBvB,aAEnD,OACE,iCACE,SAACQ,EAAD,CAAW6B,GAAIV,EAAYW,QAA3B,sBACA,SAAC3B,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,UACGf,GACG,SAACgB,EAAD,CAAYyB,IAAG,yCAAoCzC,GAAe0C,IAAK5C,KACvE,SAACkB,EAAD,CAAYyB,IAAKE,EAAUD,IAAK5C,OAEtC,UAACiB,EAAD,YACE,SAACE,EAAD,UAAanB,KACb,UAACqB,EAAD,0BAAwBjB,EAAxB,QACA,SAACgB,EAAD,wBACA,SAACC,EAAD,UAAYpB,KACZ,SAACmB,EAAD,sBACA,SAACC,EAAD,UAAYhB,KACZ,SAACe,EAAD,sCACA,UAACE,EAAD,YACE,yBAAI,SAACC,EAAD,CAAUkB,GAAI,OAAd,qBACJ,yBAAI,SAAClB,EAAD,CAAUkB,GAAI,UAAd,mCAKZ,SAAC,EAAAK,SAAD,WACE,SAAC,KAAD,QAIP,C,8EC5DM,IAAMjD,EAAU,mCACVD,EAAM,+B","sources":["services/fetchMovieDetails.js","components/MovieDetails/MovieDetails.styled.js","pages/MovieDetails.js","services/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_KEY, URL } from \"./constants\";\n\nexport const fetchMovieDetails = async (id) => {\n  const response = await axios.get(`${URL}movie/${id}?api_key=${API_KEY}`);\n\n  const { title, overview, poster_path, genres, vote_average } = response.data;\n  const movieGenres = genres.map(item => item.name).join(\", \");\n  const movieInfo = {\n    title,\n    overview,\n    poster_path,\n    movieGenres,\n    vote_average: (vote_average * 10).toFixed(),\n  }\n\n  return movieInfo;\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const GoBackBtn = styled(Link)`\n  display: block;\n  width: 60px;\n  margin: 0 auto;\n  padding: 4px 8px;\n  text-align: center;\n  border-radius: 5px;\n  background: linear-gradient(90deg, hsl(277, 56%, 68%) 0%, hsl(203, 71%, 60%) 100%);\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    box-shadow: 0 8px 48px hsla(203, 71%, 25%, .5);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin: 24px auto;\n\n  @media screen and (max-width: 767px) {\n    width: 280px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 846px;\n  }\n`;\n\nexport const DetailsList = styled.ul`\n  padding: 24px;\n  display: flex;\n  gap: 20px;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const DetailsItem = styled.li`\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 2);\n  }\n`;\n\nexport const DetailsImg = styled.img`\n  width: 248px;\n  height: 315px;\n  border-radius: 5px;\n\n  @media screen and (min-width: 768px) {\n    width: 294px;\n    height: 400px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 375px;\n    height: 478px;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 20px;\n  font-weight: 700;\n  filter: drop-shadow(0 4px 4px #51AAFF);\n  \n  @media screen and (max-width: 767px) {\n    font-size: 1rem;\n  }\n`;\n\nexport const MovieSubtitle = styled.h2`\n  margin-bottom: 12px;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nexport const MovieText = styled.p`\n  margin-bottom: 12px;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const InfoLink = styled(Link)`\n  padding: 8px 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border-radius: 5px;\n  transition: background 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background: linear-gradient(90deg, hsl(277, 56%, 68%) 0%, hsl(203, 71%, 60%) 100%);\n  }\n`;","import { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { useEffect, useState, useRef, Suspense } from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"services/fetchMovieDetails\";\nimport { DetailsImg, DetailsItem, DetailsList, GoBackBtn, MovieText, MovieSubtitle, MovieTitle, Wrapper, InfoList, InfoLink } from \"components/MovieDetails/MovieDetails.styled\";\nimport NoPoster from \"../images/no-poster.png\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? \"/movies\");\n\n  useEffect(() => {\n    const fetchDetails = async (id) => {\n      try {\n        Loading.circle();\n        const fetchedMovieDetails = await fetchMovieDetails(id);\n        setMovieDetails(fetchedMovieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        Loading.remove();\n      }\n    }\n    fetchDetails(movieId);\n  }, [movieId]);\n\n  const { title, overview, poster_path, movieGenres, vote_average } = movieDetails;\n  \n  return (\n    <>\n      <GoBackBtn to={backLinkRef.current}>Go Back</GoBackBtn>\n      <Wrapper>\n        <DetailsList>\n          <DetailsItem>\n            {poster_path\n              ? <DetailsImg src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n              : <DetailsImg src={NoPoster} alt={title} />}\n          </DetailsItem>\n          <DetailsItem>\n            <MovieTitle>{title}</MovieTitle>\n            <MovieText>User Score: {vote_average}%</MovieText>\n            <MovieSubtitle>Overview</MovieSubtitle>\n            <MovieText>{overview}</MovieText>\n            <MovieSubtitle>Genres</MovieSubtitle>\n            <MovieText>{movieGenres}</MovieText>\n            <MovieSubtitle>Additional information</MovieSubtitle>\n            <InfoList>\n              <li><InfoLink to={\"cast\"}>Cast</InfoLink></li>\n              <li><InfoLink to={\"reviews\"}>Reviews</InfoLink></li>\n            </InfoList>\n          </DetailsItem>\n        </DetailsList>\n      </Wrapper>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  )\n}\n\nexport default MovieDetails;","export const API_KEY = \"959330b1b48c95e1fde96a992bbede29\";\nexport const URL = \"https://api.themoviedb.org/3/\";"],"names":["fetchMovieDetails","id","axios","URL","API_KEY","response","data","title","overview","poster_path","genres","vote_average","movieGenres","map","item","name","join","movieInfo","toFixed","GoBackBtn","styled","Link","Wrapper","DetailsList","DetailsItem","DetailsImg","MovieTitle","MovieSubtitle","MovieText","InfoList","InfoLink","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchDetails","Loading","fetchedMovieDetails","console","log","to","current","src","alt","NoPoster","Suspense"],"sourceRoot":""}