{"version":3,"file":"static/js/646.a583c142.chunk.js","mappings":"uQAGaA,EAAgB,mCAAG,WAAOC,GAAP,yFACPC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAb,gCAAwCC,EAAAA,EAAxC,kBAAyDH,IADlD,cACxBI,EADwB,OAEtBC,EAAYD,EAASE,KAArBD,QAFsB,kBAIvBA,GAJuB,2CAAH,sD,SCgD7B,EA/Ce,WACb,OAAqCE,EAAAA,EAAAA,UAAS,IAA9C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMZ,EAAQW,EAAaE,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAVhB,GAA4B,KAAVA,EAAtB,CAEA,IAAMiB,EAAkB,mCAAG,WAAOjB,GAAP,gGAEFD,EAAiBC,GAFf,OAEjBkB,EAFiB,OAGvBT,EAAeS,GAHQ,gDAKvBC,QAAQC,IAAR,MALuB,yDAAH,sDAQxBH,EAAmBjB,EAVuB,CAW3C,GAAE,CAACA,IAcJ,OACE,iCACE,kBAAMqB,SAdW,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,cACnB,GAAkC,KAA9BD,EAAKE,SAAS1B,MAAM2B,MACtB,OAAOf,EAAgB,CAAC,GAG1BA,EAAgB,CAAEZ,MAAOwB,EAAKE,SAAS1B,MAAM2B,QAC7CH,EAAKI,OACN,EAIiCC,aAAa,MAA3C,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,mBAC5C,mBAAQF,KAAK,SAAb,wBAEF,wBACGtB,EAAWyB,KAAI,SAAAC,GAAI,OAClB,yBAAkB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMxB,GAA/C,SAA4DoB,EAAKK,SAA1EL,EAAKE,GADI,QAM3B,C,6ECjDM,IAAMjC,EAAU,mCACVD,EAAM,+B","sources":["services/fetchSearchMovie.js","pages/Movies.js","services/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_KEY, URL } from \"./constants\";\n\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get(`${URL}search/movie?api_key=${API_KEY}&query=${query}`);\n  const { results } = response.data;\n\n  return results;\n}","import { useEffect, useState } from \"react\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport { fetchSearchMovie } from \"services/fetchSearchMovie\";\n\nconst Movies = () => {\n  const [serchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null || query === \"\") return;\n\n    const fetchedSearchMovie = async (query) => {\n      try {\n        const movies = await fetchSearchMovie(query);\n        setSearchMovie(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchedSearchMovie(query);\n  }, [query]);\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.elements.query.value === \"\") {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  }\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit} autoComplete=\"off\">\n        <input type=\"text\" name=\"query\" placeholder=\"Search movies\"/>\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {serchMovie.map(item => (\n          <li key={item.id}><Link to={`/movies/${item.id}`} state={{ from: location }}>{item.title}</Link></li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Movies;","export const API_KEY = \"959330b1b48c95e1fde96a992bbede29\";\nexport const URL = \"https://api.themoviedb.org/3/\";"],"names":["fetchSearchMovie","query","axios","URL","API_KEY","response","results","data","useState","serchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetchedSearchMovie","movies","console","log","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","autoComplete","type","name","placeholder","map","item","to","id","state","from","title"],"sourceRoot":""}