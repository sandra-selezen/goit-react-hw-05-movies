{"version":3,"file":"static/js/538.91c31c98.chunk.js","mappings":"uQAGaA,EAAiB,mCAAG,WAAOC,GAAP,uGACRC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAb,iBAAyBF,EAAzB,oBAAuCG,EAAAA,IAD/B,cACzBC,EADyB,SAGgCA,EAASC,KAAhEC,EAHuB,EAGvBA,MAAOC,EAHgB,EAGhBA,SAAUC,EAHM,EAGNA,YAAaC,EAHP,EAGOA,OAAQC,EAHf,EAGeA,aACxCC,EAAcF,EAAOG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MACjDC,EAAY,CAChBV,MAAAA,EACAC,SAAAA,EACAC,YAAY,kCAAD,OAAoCA,GAC/CG,YAAAA,EACAD,cAA8B,GAAfA,GAAmBO,WAVL,kBAaxBD,GAbwB,2CAAH,sD,SC2C9B,EA1CqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEnDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAO9B,GAAP,gGAEiBD,EAAkBC,GAFnC,OAEX+B,EAFW,OAGjBT,EAAgBS,GAHC,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,sDAQlBH,EAAaZ,EACd,GAAE,CAACA,IAEJ,IAAQZ,EAA4De,EAA5Df,MAAOC,EAAqDc,EAArDd,SAAUC,EAA2Ca,EAA3Cb,YAAaG,EAA8BU,EAA9BV,YAAaD,EAAiBW,EAAjBX,aAEnD,OACE,iCACE,SAAC,KAAD,CAAMwB,GAAIT,EAAYU,QAAtB,sBACA,wBAAK7B,KACL,wCAAgBI,EAAhB,QACA,gBAAK0B,IAAK5B,EAAa6B,IAAK/B,KAC5B,wBAAG,uCACH,uBAAIC,KACJ,wBAAG,qCACH,uBAAII,KACJ,mDACA,2BACE,yBAAI,SAAC,KAAD,CAAMuB,GAAI,OAAV,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAEN,SAAC,EAAAI,SAAD,WACE,SAAC,KAAD,QAIP,C,6EC5CM,IAAMnC,EAAU,mCACVD,EAAM,+B","sources":["services/fetchMovieDetails.js","pages/MovieDetails.js","services/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport { API_KEY, URL } from \"./constants\";\n\nexport const fetchMovieDetails = async (id) => {\n  const response = await axios.get(`${URL}movie/${id}?api_key=${API_KEY}`);\n\n  const { title, overview, poster_path, genres, vote_average } = response.data;\n  const movieGenres = genres.map(item => item.name).join(\", \");\n  const movieInfo = {\n    title,\n    overview,\n    poster_path: `https://image.tmdb.org/t/p/w300${poster_path}`,\n    movieGenres,\n    vote_average: (vote_average * 10).toFixed(),\n  }\n\n  return movieInfo;\n}","import { useEffect, useState, useRef, Suspense } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"services/fetchMovieDetails\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? \"/movies\");\n\n  useEffect(() => {\n    const fetchDetails = async (id) => {\n      try {\n        const fetchedMovieDetails = await fetchMovieDetails(id);\n        setMovieDetails(fetchedMovieDetails);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDetails(movieId);\n  }, [movieId]);\n\n  const { title, overview, poster_path, movieGenres, vote_average } = movieDetails;\n  \n  return (\n    <>\n      <Link to={backLinkRef.current}>Go Back</Link>\n      <h1>{title}</h1>\n      <p>User Score: {vote_average}%</p>\n      <img src={poster_path} alt={title} />\n      <p><b>Overview</b></p>\n      <p>{overview}</p>\n      <p><b>Genres</b></p>\n      <p>{movieGenres}</p>\n      <p>Additional information</p>\n      <ul>\n        <li><Link to={\"cast\"}>Cast</Link></li>\n        <li><Link to={\"reviews\"}>Reviews</Link></li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  )\n}\n\nexport default MovieDetails;","export const API_KEY = \"959330b1b48c95e1fde96a992bbede29\";\nexport const URL = \"https://api.themoviedb.org/3/\";"],"names":["fetchMovieDetails","id","axios","URL","API_KEY","response","data","title","overview","poster_path","genres","vote_average","movieGenres","map","item","name","join","movieInfo","toFixed","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchDetails","fetchedMovieDetails","console","log","to","current","src","alt","Suspense"],"sourceRoot":""}